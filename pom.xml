<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org-adarro-padexperience</groupId>
	<artifactId>padx-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>PadXperience</name>
	<description>POC for communication on Android / JavaFX using scala and Puzzle and Dragons</description>
	<url>https://github.com/adarro</url>
	<inceptionYear>2015</inceptionYear>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jvm.version>1.8</jvm.version>
		<maven.compiler.source>${jvm.version}</maven.compiler.source>
		<maven.compiler.target>${jvm.version}</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<couchbase.version>1.1.0-525</couchbase.version>
		<scala.base>2.11</scala.base>
		<scala.version>${scala.base}.6</scala.version>
		<scala.tools.version>${scala.base}</scala.tools.version>
		<scala.logging.version>2.1.2</scala.logging.version>
		<license.id>apache_v2</license.id>
	</properties>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
			   <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>1.6</version>

                    <configuration>
                        <verbose>true</verbose>
                        <includes>
                            <includes>**/*.java</includes>
                             <includes>**/*.scala</includes>
                        </includes>
                    </configuration>

                    <executions>
                        <execution>
                            <id>generate-license-headers</id>
                            <goals>
                                <goal>update-file-header</goal>
                            </goals>
                            <phase>process-sources</phase>
                            <configuration>
                                <licenseName>${license.id}</licenseName>
                                <roots>
                                    <root>src/main/java</root>
                                    <root>src/test/java</root>
                                </roots>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
				<plugin>
					<!-- see http://davidb.github.com/scala-maven-plugin -->
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.1.3</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<args>
									<!-- <arg>-make:transitive</arg> flag is deprecated in 2.11+ -->
									<arg>-dependencyfile</arg>
									<arg>-deprecation</arg>
									<!-- <arg>${project.build.directory}/.scala_dependencies</arg> -->
								</args>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.13</version>
					<configuration>
						<useFile>false</useFile>
						<disableXmlReport>true</disableXmlReport>
						<!-- If you have classpath issue like NoDefClassError,... -->
						<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
						<includes>
							<include>**/*Test.*</include>
							<include>**/*Suite.*</include>
						</includes>
					</configuration>
				</plugin>
<!-- 				<plugin> -->
<!-- 					<groupId>org.codehaus.mojo</groupId> -->
<!-- 					<artifactId>license-maven-plugin</artifactId> -->
<!-- 					<version>1.8</version> -->
<!-- 					<configuration> -->
<!-- 						<verbose>true</verbose> -->
<!-- 						<addSvnKeyWords>true</addSvnKeyWords> -->
<!-- 					</configuration> -->
<!-- 					<executions> -->
<!-- 						<execution> -->
<!-- 							<id>first</id> -->
<!-- 							<goals> -->
<!-- 								<goal>update-file-header</goal> -->
<!-- 							</goals> -->
<!-- 							<phase>process-sources</phase> -->
<!-- 							<configuration> -->
<!-- 								<licenseName>${license.id}</licenseName> -->
<!-- 								<roots> -->
<!-- 									<root>src/main/java</root> -->
<!-- 									<root>src/main/scala</root> -->
<!-- 									<root>src/test</root> -->
<!-- 								</roots> -->
<!-- 								<includes> -->
<!-- 									<include>*.java</include> -->
<!-- 									<include>*.scala</include> -->
<!-- 								</includes> -->
<!-- 							</configuration> -->
<!-- 						</execution> -->
<!-- 					</executions> -->
<!-- 				</plugin> -->
			</plugins>
		</pluginManagement>
		
	</build>

	<modules>
		<module>padx-core</module>
		<module>padx-server</module>
		<module>client-rich</module>
		<module>client-android</module>
		<module>padx-db</module>
	</modules>
	<organization>
		<name>TruthEncode</name>
		<url>https://truthencode.wordpress.com</url>
	</organization>
	<dependencyManagement>
		<dependencies>
			<!-- Database -->
			<dependency>
				<groupId>com.couchbase.lite</groupId>
				<artifactId>couchbase-lite-java</artifactId>
				<version>${couchbase.version}</version>
			</dependency>
			<!-- Hack, above does not include win32, only linux native -->
			<dependency>
				<groupId>com.couchbase.lite</groupId>
				<artifactId>couchbase-lite-java-native-win32</artifactId>
				<version>${couchbase.version}</version>
			</dependency>
			
			<!-- Marshalling / transform -->
			<dependency>
				<groupId>net.liftweb</groupId>
				<artifactId>lift-json_2.11</artifactId>
				<!-- <version>3.0-M5-1</version> -->
				<version>2.6.2</version>
			</dependency>
			<dependency>
				<groupId>org.json4s</groupId>
				<artifactId>json4s-native_${scala.tools.version}</artifactId>
				<version>3.3.0.RC2</version>
			</dependency>
			<dependency>
				<groupId>io.spray</groupId>
				<artifactId>spray-json_2.11</artifactId>
				<version>1.3.2</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>com.typesafe.scala-logging</groupId>
				<artifactId>scala-logging-slf4j_${scala.tools.version}</artifactId>
				<version>${scala.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.2</version>
			</dependency>
			<!-- Scala Specific -->
			<!-- Web Scraping Utility -->
			<dependency>
				<groupId>net.ruippeixotog</groupId>
				<artifactId>scala-scraper_${scala.tools.version}</artifactId>
				<version>0.1.1</version>
			</dependency>
			<!-- Configuration Management -->
			<dependency>
				<groupId>com.typesafe</groupId>
				<artifactId>config</artifactId>
				<version>1.3.0</version>
			</dependency>
			<!-- Test Dependencies -->
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<!-- Validation -->
			<dependency>
				<groupId>com.wix</groupId>
				<artifactId>accord-core_${scala.tools.version}</artifactId>
				<version>0.4.2</version>
			</dependency>

			<!-- Test -->
			<!-- TODO: check JUnit Depend version here if Java Testing is required 
				(Currently just using transitives for Scala) -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.specs2</groupId>
				<artifactId>specs2-scalacheck_${scala.tools.version}</artifactId>
				<version>2.4.16</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.tools.version}</artifactId>
				<version>2.2.5</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<repositories>
		<repository>
			<id>couchbase-lite</id>
			<name>Couchbase Lite OSS</name>
			<url>http://files.couchbase.com/maven2</url>
		</repository>
	</repositories>
</project>